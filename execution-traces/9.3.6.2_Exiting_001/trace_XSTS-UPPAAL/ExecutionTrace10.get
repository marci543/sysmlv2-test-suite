import "/hu.bme.mit.gamma.sysml.testmodel/PSSM/9.3.6.2_Exiting_001/.Verification1.gsm"
@ ("E<> (T3_statechart_Exiting001_StatechartStatechart) && P_System._StableLocation_")
trace Exiting001Trace of Exiting001
step {
	act {
		reset
	}
	assert {
		state statechart_Exiting001_StatechartStatechart.SubExiting001.waiting;
		variable statechart_Exiting001_StatechartStatechart.T1 = true;
		variable statechart_Exiting001_StatechartStatechart.eventCounter = 0;
	}
}
step {
	act {
		raise startPort.in_StartSignal()
		schedule component
	}
	assert {
		state statechart_Exiting001_StatechartStatechart.SubExiting001.S1;
		state statechart_Exiting001_StatechartStatechart.ParentS1Left.S1Left;
		state statechart_Exiting001_StatechartStatechart.ParentS1Right.S1Right;
		state statechart_Exiting001_StatechartStatechart.SubS1Left.S1_1;
		state statechart_Exiting001_StatechartStatechart.SubS1Right.S2_1;
		state statechart_Exiting001_StatechartStatechart.SubS1_1.S1_1_1;
		variable statechart_Exiting001_StatechartStatechart.T1_1 = true;
		variable statechart_Exiting001_StatechartStatechart.T1_1_1 = true;
		variable statechart_Exiting001_StatechartStatechart.T2 = true;
		variable statechart_Exiting001_StatechartStatechart.eventCounter = 0;
	}
}
step {
	act {
		raise continuePort.in_ContinueSignal()
		schedule component
	}
	assert {
		raise T3_testEnd.out_OutSignal(5);
		raise S2_1_exit.out_OutSignal(1);
		raise S1_1_exit.out_OutSignal(3);
		raise S1_exit.out_OutSignal(4);
		raise S1_1_1_exit.out_OutSignal(2);
		state statechart_Exiting001_StatechartStatechart.SubExiting001.FinalStateOfSubExiting001;
		variable statechart_Exiting001_StatechartStatechart.T3 = true;
		variable statechart_Exiting001_StatechartStatechart.eventCounter = 5;
	}
}